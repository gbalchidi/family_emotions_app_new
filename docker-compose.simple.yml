version: '3.8'

services:
  bot:
    build: .
    container_name: family-emotions-bot
    restart: unless-stopped
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB:-family_emotions}
      - POSTGRES_USER=${POSTGRES_USER:-family_bot}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - RATE_LIMIT_DAILY=${RATE_LIMIT_DAILY:-50}
      - RATE_LIMIT_HOURLY=${RATE_LIMIT_HOURLY:-10}
    depends_on:
      - postgres
      - redis
    networks:
      - family-bot-network
    volumes:
      - ./logs:/app/logs
    # Add startup delay to let databases initialize
    command: sh -c "sleep 10 && python -m src.bot"

  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-family_emotions}
      - POSTGRES_USER=${POSTGRES_USER:-family_bot}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - family-bot-network
    ports:
      - "5432"

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - family-bot-network
    ports:
      - "6379"

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  family-bot-network:
    driver: bridge